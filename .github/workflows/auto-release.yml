name: Auto Release

# 觸發條件：當創建tag時執行
on:
  push:
    tags:
      - 'v*'  # 匹配所有以v開頭的tag

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    # 步驟1: 檢出代碼
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    # 步驟2: 設置Node.js環境
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    # 步驟3: 安裝依賴
    - name: Install dependencies
      run: npm ci
    
    # 步驟4: 構建項目
    - name: Build project
      run: npm run build
    
    # 步驟5: 配置Git
    - name: Configure Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
    
    # 步驟6: 準備release分支
    - name: Prepare release branch
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        echo "Processing tag: $TAG_NAME"
        
        # 檢查release分支是否存在
        if git show-ref --verify --quiet refs/remotes/origin/release; then
          echo "Release branch exists, checking it out"
          git fetch origin release
          git checkout -B release origin/release
        else
          echo "Release branch does not exist, creating it"
          git checkout --orphan release
        fi
        
        # 清空工作目錄（保留dist目錄）
        find . -maxdepth 1 -not -name '.git' -not -name '.' -not -name 'dist' -exec rm -rf {} + 2>/dev/null || true
    
    # 步驟7: 複製必要文件
    - name: Copy necessary files
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        
        # 從tag複製必要文件
        git checkout $TAG_NAME -- index.html package.json README.md
        
        # 確保dist目錄存在
        if [ ! -d "dist" ]; then
          echo "Error: dist directory not found after build"
          exit 1
        fi
        
        echo "Files copied successfully:"
        ls -la
    
    # 步驟8: 創建發布說明
    - name: Create release notes
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        cat > RELEASE_NOTES.md << EOF
        # Release $TAG_NAME
        
        **發布時間**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
        
        **Tag**: $TAG_NAME
        
        **構建信息**:
        - 構建時間: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
        - 構建環境: GitHub Actions (Ubuntu Latest)
        - Node.js版本: $(node --version)
        - NPM版本: $(npm --version)
        
        **文件列表**:
        \`\`\`
        $(find dist -type f | head -20)
        \`\`\`
        
        ## 部署說明
        此版本已準備好部署到生產環境。
        EOF
    
    # 步驟9: 提交更改
    - name: Commit changes
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        
        # 添加所有文件
        git add .
        
        # 提交
        git commit -m "Release $TAG_NAME

        - 構建時間: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
        - 基於tag: $TAG_NAME
        - 自動構建並部署到release分支" || echo "No changes to commit"
    
    # 步驟10: 推送到release分支
    - name: Push to release branch
      run: |
        echo "Pushing to release branch..."
        git push origin release
    
    # 步驟11: 創建GitHub Release
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## 麻將計分工具 Release ${{ github.ref_name }}
          
          **發布時間**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
          
          ### 主要功能
          - 🎮 快速記錄每局麻將分數
          - 📊 即時計算玩家總分
          - 📝 完整歷史記錄與統計分析
          - 💾 本地儲存，資料不遺失
          - 📱 手機優先設計，觸控友善
          
          ### 部署信息
          - 構建分支: release
          - 構建狀態: ✅ 成功
          - 構建時間: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
          
          ### 下載
          構建文件已推送到 `release` 分支，可直接部署使用。
        draft: false
        prerelease: false
    
    # 步驟12: 輸出構建信息
    - name: Build summary
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        echo "🎉 構建完成！"
        echo "📦 Tag: $TAG_NAME"
        echo "🌿 Release分支: release"
        echo "📁 構建文件: dist/"
        echo "📋 發布說明: RELEASE_NOTES.md"
        echo ""
        echo "構建文件列表:"
        find dist -type f | head -10
